unit TestCcLog;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, CcReplicator, CCat, Classes, DB, CcProviders, CcKeys, SysUtils, CcMemDS, 
  CcLog;
type
  // Test methods for class TCcLog
  
  TestTCcLog = class(TTestCase)
  strict private
    FCcLog: TCcLog;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestFBN;
    procedure TestFieldByName;
    procedure TestFieldExists;
    procedure TestEdit;
    procedure TestPost;
    procedure TestNext;
    procedure TestPrior;
    procedure TestFirst;
    procedure TestLast;
  end;

implementation

procedure TestTCcLog.SetUp;
begin
  FCcLog := TCcLog.Create;
end;

procedure TestTCcLog.TearDown;
begin
  FCcLog.Free;
  FCcLog := nil;
end;

procedure TestTCcLog.TestFBN;
var
  ReturnValue: string;
  cFieldName: string;
begin
  // TODO: Setup method call parameters
  ReturnValue := FCcLog.FBN(cFieldName);
  // TODO: Validate method results
end;

procedure TestTCcLog.TestFieldByName;
var
  ReturnValue: TField;
  cFieldName: string;
begin
  // TODO: Setup method call parameters
  ReturnValue := FCcLog.FieldByName(cFieldName);
  // TODO: Validate method results
end;

procedure TestTCcLog.TestFieldExists;
var
  ReturnValue: Boolean;
  cFieldName: string;
begin
  // TODO: Setup method call parameters
  ReturnValue := FCcLog.FieldExists(cFieldName);
  // TODO: Validate method results
end;

procedure TestTCcLog.TestEdit;
begin
  FCcLog.Edit;
  // TODO: Validate method results
end;

procedure TestTCcLog.TestPost;
begin
  FCcLog.Post;
  // TODO: Validate method results
end;

procedure TestTCcLog.TestNext;
begin
  FCcLog.Next;
  // TODO: Validate method results
end;

procedure TestTCcLog.TestPrior;
begin
  FCcLog.Prior;
  // TODO: Validate method results
end;

procedure TestTCcLog.TestFirst;
begin
  FCcLog.First;
  // TODO: Validate method results
end;

procedure TestTCcLog.TestLast;
begin
  FCcLog.Last;
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTCcLog.Suite);
end.

